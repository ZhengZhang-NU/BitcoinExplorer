name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: bitcoin_explorer
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          echo "APP_PORT=$(shuf -i 1024-65535 -n 1)" >> $GITHUB_ENV
          echo "INGESTION_PORT=$(shuf -i 1024-65535 -n 1)" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install
        working-directory: ./app

      - name: Build frontend
        run: npm run build
        working-directory: ./app

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Rust dependencies
        run: cargo build --release
        working-directory: ./ingestion

      - name: Run backend tests
        run: cargo test --release
        working-directory: ./ingestion

      - name: Run frontend tests
        run: npm test -- --passWithNoTests
        working-directory: ./app

      - name: Docker Compose Build and Run
        run: docker-compose up --build -d

      - name: Wait for services to be healthy
        run: |
          echo "Waiting for Postgres to be healthy..."
          until docker-compose exec -T postgres pg_isready -U postgres -d bitcoin_explorer; do
            echo "Waiting for Postgres..."
            sleep 10
          done

      - name: Test API endpoint
        run: |
          sudo apt-get install -y jq
          for i in {1..5}; do
            curl http://localhost:${INGESTION_PORT}/block-info | jq && break
            echo "Waiting for API endpoint..."
            sleep 10
          done

      - name: Docker Compose Down
        run: docker-compose down
